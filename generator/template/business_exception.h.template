/*************************************************************
 * 
 *  #####   ###   #     #    #		 #     #####    #####     ####
 *    #			 #    #	#	  #			#		#			 #  #	  	#		#		 #
 *    #			 #    #		# #				#				 ###			#####    #		
 *    #			###   #		  #				#				 #   #		#					####
 *
 * ***********************************************************
 * Generated by tinyrpc framework tinyrpc_generator.py
 * This file will not be overwrite althrough protobuf file changed !!!
 * File can't overwrited while exist
 * ***********************************************************
 * File Name: ${FILE_NAME}
 * Create Time: ${CREATE_TIME}
 * Allow Edit: True
*************************************************************/



#ifndef ${HEADER_DEFINE}
#define ${HEADER_DEFINE} 

#include <exception>
#include <string>
#include <memory>
#include <sstream>
#include "tinyrpc/comm/log.h"



namespace ${PROJECT_NAME} {

class BusinessException : public std::exception {
 public:

  BusinessException(long long code, const std::string& err_info, const std::string& file_name, int line):
      m_error_code(code), m_error_info(err_info), m_file_name(file_name), m_line(line) {
    AppInfoLog("[%s:%d] throw BusinessException: {code: %d, error info %s}", file_name.c_str(), line, m_error_code, m_error_info.c_str());
  }

  ~BusinessException() {
  
  }

  const char* what() {
    return m_error_info.c_str();
  }

  std::string error() {
    return m_error_info;
  }

  long long code() {
    return m_error_code;
  }

  std::string file_name() {
    return m_file_name;
  }

  int line() {
    return m_line;
  }

 private:
  long long m_error_code {0};
  std::string m_error_info;

  std::string m_file_name;
  int m_line {0};

};

}

#endif